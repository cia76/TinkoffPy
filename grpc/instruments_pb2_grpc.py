# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from TinkoffPy.grpc import instruments_pb2 as TinkoffPy_dot_grpc_dot_instruments__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in TinkoffPy/grpc/instruments_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class InstrumentsServiceStub(object):
    """Методы сервиса предназначены для получения:<br/>1. Информации об инструментах.<br/>2.
    Расписания торговых сессий.<br/>3. Календаря выплат купонов по облигациям.<br/>4.
    Размера гарантийного обеспечения по фьючерсам.<br/>5. Дивидендов по ценной бумаге.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TradingSchedules = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/TradingSchedules',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.TradingSchedulesRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.TradingSchedulesResponse.FromString,
                _registered_method=True)
        self.BondBy = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/BondBy',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.BondResponse.FromString,
                _registered_method=True)
        self.Bonds = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/Bonds',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentsRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.BondsResponse.FromString,
                _registered_method=True)
        self.GetBondCoupons = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetBondCoupons',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetBondCouponsRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetBondCouponsResponse.FromString,
                _registered_method=True)
        self.GetBondEvents = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetBondEvents',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetBondEventsRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetBondEventsResponse.FromString,
                _registered_method=True)
        self.CurrencyBy = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/CurrencyBy',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.CurrencyResponse.FromString,
                _registered_method=True)
        self.Currencies = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/Currencies',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentsRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.CurrenciesResponse.FromString,
                _registered_method=True)
        self.EtfBy = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/EtfBy',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.EtfResponse.FromString,
                _registered_method=True)
        self.Etfs = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/Etfs',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentsRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.EtfsResponse.FromString,
                _registered_method=True)
        self.FutureBy = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/FutureBy',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.FutureResponse.FromString,
                _registered_method=True)
        self.Futures = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/Futures',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentsRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.FuturesResponse.FromString,
                _registered_method=True)
        self.OptionBy = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/OptionBy',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.OptionResponse.FromString,
                _registered_method=True)
        self.Options = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/Options',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentsRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.OptionsResponse.FromString,
                _registered_method=True)
        self.OptionsBy = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/OptionsBy',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.FilterOptionsRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.OptionsResponse.FromString,
                _registered_method=True)
        self.ShareBy = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/ShareBy',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.ShareResponse.FromString,
                _registered_method=True)
        self.Shares = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/Shares',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentsRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.SharesResponse.FromString,
                _registered_method=True)
        self.Indicatives = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/Indicatives',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.IndicativesRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.IndicativesResponse.FromString,
                _registered_method=True)
        self.GetAccruedInterests = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAccruedInterests',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetAccruedInterestsRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetAccruedInterestsResponse.FromString,
                _registered_method=True)
        self.GetFuturesMargin = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetFuturesMargin',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetFuturesMarginRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetFuturesMarginResponse.FromString,
                _registered_method=True)
        self.GetInstrumentBy = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetInstrumentBy',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentResponse.FromString,
                _registered_method=True)
        self.GetDividends = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetDividends',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetDividendsRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetDividendsResponse.FromString,
                _registered_method=True)
        self.GetAssetBy = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAssetBy',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.AssetRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.AssetResponse.FromString,
                _registered_method=True)
        self.GetAssets = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAssets',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.AssetsRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.AssetsResponse.FromString,
                _registered_method=True)
        self.GetFavorites = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetFavorites',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetFavoritesRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetFavoritesResponse.FromString,
                _registered_method=True)
        self.EditFavorites = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/EditFavorites',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.EditFavoritesRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.EditFavoritesResponse.FromString,
                _registered_method=True)
        self.CreateFavoriteGroup = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/CreateFavoriteGroup',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.CreateFavoriteGroupRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.CreateFavoriteGroupResponse.FromString,
                _registered_method=True)
        self.DeleteFavoriteGroup = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/DeleteFavoriteGroup',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.DeleteFavoriteGroupRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.DeleteFavoriteGroupResponse.FromString,
                _registered_method=True)
        self.GetFavoriteGroups = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetFavoriteGroups',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetFavoriteGroupsRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetFavoriteGroupsResponse.FromString,
                _registered_method=True)
        self.GetCountries = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetCountries',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetCountriesRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetCountriesResponse.FromString,
                _registered_method=True)
        self.FindInstrument = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/FindInstrument',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.FindInstrumentRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.FindInstrumentResponse.FromString,
                _registered_method=True)
        self.GetBrands = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetBrands',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetBrandsRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetBrandsResponse.FromString,
                _registered_method=True)
        self.GetBrandBy = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetBrandBy',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetBrandRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.Brand.FromString,
                _registered_method=True)
        self.GetAssetFundamentals = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAssetFundamentals',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetAssetFundamentalsRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetAssetFundamentalsResponse.FromString,
                _registered_method=True)
        self.GetAssetReports = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAssetReports',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetAssetReportsRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetAssetReportsResponse.FromString,
                _registered_method=True)
        self.GetConsensusForecasts = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetConsensusForecasts',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetConsensusForecastsRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetConsensusForecastsResponse.FromString,
                _registered_method=True)
        self.GetForecastBy = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetForecastBy',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetForecastRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetForecastResponse.FromString,
                _registered_method=True)
        self.GetRiskRates = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetRiskRates',
                request_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.RiskRatesRequest.SerializeToString,
                response_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.RiskRatesResponse.FromString,
                _registered_method=True)


class InstrumentsServiceServicer(object):
    """Методы сервиса предназначены для получения:<br/>1. Информации об инструментах.<br/>2.
    Расписания торговых сессий.<br/>3. Календаря выплат купонов по облигациям.<br/>4.
    Размера гарантийного обеспечения по фьючерсам.<br/>5. Дивидендов по ценной бумаге.
    """

    def TradingSchedules(self, request, context):
        """TradingSchedules — расписания торговых площадок
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BondBy(self, request, context):
        """BondBy — получить облигацию по ее идентификатору
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Bonds(self, request, context):
        """Bonds — список облигаций
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBondCoupons(self, request, context):
        """GetBondCoupons — график выплат купонов по облигации
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBondEvents(self, request, context):
        """GetBondEvents — события по облигации
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CurrencyBy(self, request, context):
        """CurrencyBy — получить валюту по ее идентификатору
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Currencies(self, request, context):
        """Currencies — список валют
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EtfBy(self, request, context):
        """EtfBy — получить инвестиционный фонд по его идентификатору
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Etfs(self, request, context):
        """Etfs — список инвестиционных фондов
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FutureBy(self, request, context):
        """FutureBy — получить фьючерс по его идентификатору
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Futures(self, request, context):
        """Futures — список фьючерсов
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OptionBy(self, request, context):
        """OptionBy — получить опцион по его идентификатору
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Options(self, request, context):
        """Deprecated Options — список опционов
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OptionsBy(self, request, context):
        """OptionsBy — список опционов
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShareBy(self, request, context):
        """ShareBy — получить акцию по ее идентификатору
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Shares(self, request, context):
        """Shares — список акций
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Indicatives(self, request, context):
        """Indicatives — индикативные инструменты — индексы, товары и другие
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccruedInterests(self, request, context):
        """GetAccruedInterests — накопленный купонный доход по облигации
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFuturesMargin(self, request, context):
        """GetFuturesMargin — размера гарантийного обеспечения по фьючерсам
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInstrumentBy(self, request, context):
        """GetInstrumentBy — основная информация об инструменте
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDividends(self, request, context):
        """GetDividends — события выплаты дивидендов по инструменту
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssetBy(self, request, context):
        """GetAssetBy — получить актив по его идентификатору
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssets(self, request, context):
        """GetAssets — список активов
        Метод работает для всех инструментов, кроме срочных — фьючерсов и опционов
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFavorites(self, request, context):
        """GetFavorites — получить список избранных инструментов
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditFavorites(self, request, context):
        """EditFavorites — отредактировать список избранных инструментов
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateFavoriteGroup(self, request, context):
        """CreateFavoriteGroup — создать новую группу избранных инструментов
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFavoriteGroup(self, request, context):
        """DeleteFavoriteGroup — удалить группу избранных инструментов
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFavoriteGroups(self, request, context):
        """GetFavoriteGroups — список групп избранных инструментов
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCountries(self, request, context):
        """GetCountries — список стран
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindInstrument(self, request, context):
        """FindInstrument — найти инструмент
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBrands(self, request, context):
        """GetBrands — список брендов
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBrandBy(self, request, context):
        """GetBrandBy — получить бренд по его идентификатору
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssetFundamentals(self, request, context):
        """GetAssetFundamentals — фундаментальные показатели по активу
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssetReports(self, request, context):
        """GetAssetReports — расписания выхода отчетностей эмитентов
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConsensusForecasts(self, request, context):
        """GetConsensusForecasts — мнения аналитиков по инструменту
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetForecastBy(self, request, context):
        """GetForecastBy — прогнозы инвестдомов по инструменту
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRiskRates(self, request, context):
        """GetRiskRates — ставки риска по инструменту
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InstrumentsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TradingSchedules': grpc.unary_unary_rpc_method_handler(
                    servicer.TradingSchedules,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.TradingSchedulesRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.TradingSchedulesResponse.SerializeToString,
            ),
            'BondBy': grpc.unary_unary_rpc_method_handler(
                    servicer.BondBy,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.BondResponse.SerializeToString,
            ),
            'Bonds': grpc.unary_unary_rpc_method_handler(
                    servicer.Bonds,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentsRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.BondsResponse.SerializeToString,
            ),
            'GetBondCoupons': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBondCoupons,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetBondCouponsRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetBondCouponsResponse.SerializeToString,
            ),
            'GetBondEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBondEvents,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetBondEventsRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetBondEventsResponse.SerializeToString,
            ),
            'CurrencyBy': grpc.unary_unary_rpc_method_handler(
                    servicer.CurrencyBy,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.CurrencyResponse.SerializeToString,
            ),
            'Currencies': grpc.unary_unary_rpc_method_handler(
                    servicer.Currencies,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentsRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.CurrenciesResponse.SerializeToString,
            ),
            'EtfBy': grpc.unary_unary_rpc_method_handler(
                    servicer.EtfBy,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.EtfResponse.SerializeToString,
            ),
            'Etfs': grpc.unary_unary_rpc_method_handler(
                    servicer.Etfs,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentsRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.EtfsResponse.SerializeToString,
            ),
            'FutureBy': grpc.unary_unary_rpc_method_handler(
                    servicer.FutureBy,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.FutureResponse.SerializeToString,
            ),
            'Futures': grpc.unary_unary_rpc_method_handler(
                    servicer.Futures,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentsRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.FuturesResponse.SerializeToString,
            ),
            'OptionBy': grpc.unary_unary_rpc_method_handler(
                    servicer.OptionBy,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.OptionResponse.SerializeToString,
            ),
            'Options': grpc.unary_unary_rpc_method_handler(
                    servicer.Options,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentsRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.OptionsResponse.SerializeToString,
            ),
            'OptionsBy': grpc.unary_unary_rpc_method_handler(
                    servicer.OptionsBy,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.FilterOptionsRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.OptionsResponse.SerializeToString,
            ),
            'ShareBy': grpc.unary_unary_rpc_method_handler(
                    servicer.ShareBy,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.ShareResponse.SerializeToString,
            ),
            'Shares': grpc.unary_unary_rpc_method_handler(
                    servicer.Shares,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentsRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.SharesResponse.SerializeToString,
            ),
            'Indicatives': grpc.unary_unary_rpc_method_handler(
                    servicer.Indicatives,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.IndicativesRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.IndicativesResponse.SerializeToString,
            ),
            'GetAccruedInterests': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccruedInterests,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetAccruedInterestsRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetAccruedInterestsResponse.SerializeToString,
            ),
            'GetFuturesMargin': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFuturesMargin,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetFuturesMarginRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetFuturesMarginResponse.SerializeToString,
            ),
            'GetInstrumentBy': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInstrumentBy,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentResponse.SerializeToString,
            ),
            'GetDividends': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDividends,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetDividendsRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetDividendsResponse.SerializeToString,
            ),
            'GetAssetBy': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetBy,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.AssetRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.AssetResponse.SerializeToString,
            ),
            'GetAssets': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssets,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.AssetsRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.AssetsResponse.SerializeToString,
            ),
            'GetFavorites': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFavorites,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetFavoritesRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetFavoritesResponse.SerializeToString,
            ),
            'EditFavorites': grpc.unary_unary_rpc_method_handler(
                    servicer.EditFavorites,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.EditFavoritesRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.EditFavoritesResponse.SerializeToString,
            ),
            'CreateFavoriteGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFavoriteGroup,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.CreateFavoriteGroupRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.CreateFavoriteGroupResponse.SerializeToString,
            ),
            'DeleteFavoriteGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFavoriteGroup,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.DeleteFavoriteGroupRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.DeleteFavoriteGroupResponse.SerializeToString,
            ),
            'GetFavoriteGroups': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFavoriteGroups,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetFavoriteGroupsRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetFavoriteGroupsResponse.SerializeToString,
            ),
            'GetCountries': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCountries,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetCountriesRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetCountriesResponse.SerializeToString,
            ),
            'FindInstrument': grpc.unary_unary_rpc_method_handler(
                    servicer.FindInstrument,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.FindInstrumentRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.FindInstrumentResponse.SerializeToString,
            ),
            'GetBrands': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBrands,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetBrandsRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetBrandsResponse.SerializeToString,
            ),
            'GetBrandBy': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBrandBy,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetBrandRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.Brand.SerializeToString,
            ),
            'GetAssetFundamentals': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetFundamentals,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetAssetFundamentalsRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetAssetFundamentalsResponse.SerializeToString,
            ),
            'GetAssetReports': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetReports,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetAssetReportsRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetAssetReportsResponse.SerializeToString,
            ),
            'GetConsensusForecasts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConsensusForecasts,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetConsensusForecastsRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetConsensusForecastsResponse.SerializeToString,
            ),
            'GetForecastBy': grpc.unary_unary_rpc_method_handler(
                    servicer.GetForecastBy,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetForecastRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.GetForecastResponse.SerializeToString,
            ),
            'GetRiskRates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRiskRates,
                    request_deserializer=TinkoffPy_dot_grpc_dot_instruments__pb2.RiskRatesRequest.FromString,
                    response_serializer=TinkoffPy_dot_grpc_dot_instruments__pb2.RiskRatesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'tinkoff.public.invest.api.contract.v1.InstrumentsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('tinkoff.public.invest.api.contract.v1.InstrumentsService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class InstrumentsService(object):
    """Методы сервиса предназначены для получения:<br/>1. Информации об инструментах.<br/>2.
    Расписания торговых сессий.<br/>3. Календаря выплат купонов по облигациям.<br/>4.
    Размера гарантийного обеспечения по фьючерсам.<br/>5. Дивидендов по ценной бумаге.
    """

    @staticmethod
    def TradingSchedules(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/TradingSchedules',
            TinkoffPy_dot_grpc_dot_instruments__pb2.TradingSchedulesRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.TradingSchedulesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BondBy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/BondBy',
            TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.BondResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Bonds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/Bonds',
            TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentsRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.BondsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBondCoupons(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetBondCoupons',
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetBondCouponsRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetBondCouponsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBondEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetBondEvents',
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetBondEventsRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetBondEventsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CurrencyBy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/CurrencyBy',
            TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.CurrencyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Currencies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/Currencies',
            TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentsRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.CurrenciesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EtfBy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/EtfBy',
            TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.EtfResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Etfs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/Etfs',
            TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentsRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.EtfsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FutureBy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/FutureBy',
            TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.FutureResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Futures(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/Futures',
            TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentsRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.FuturesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OptionBy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/OptionBy',
            TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.OptionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Options(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/Options',
            TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentsRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.OptionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OptionsBy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/OptionsBy',
            TinkoffPy_dot_grpc_dot_instruments__pb2.FilterOptionsRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.OptionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ShareBy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/ShareBy',
            TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.ShareResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Shares(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/Shares',
            TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentsRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.SharesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Indicatives(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/Indicatives',
            TinkoffPy_dot_grpc_dot_instruments__pb2.IndicativesRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.IndicativesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAccruedInterests(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAccruedInterests',
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetAccruedInterestsRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetAccruedInterestsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFuturesMargin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetFuturesMargin',
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetFuturesMarginRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetFuturesMarginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetInstrumentBy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetInstrumentBy',
            TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.InstrumentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDividends(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetDividends',
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetDividendsRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetDividendsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAssetBy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAssetBy',
            TinkoffPy_dot_grpc_dot_instruments__pb2.AssetRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.AssetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAssets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAssets',
            TinkoffPy_dot_grpc_dot_instruments__pb2.AssetsRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.AssetsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFavorites(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetFavorites',
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetFavoritesRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetFavoritesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EditFavorites(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/EditFavorites',
            TinkoffPy_dot_grpc_dot_instruments__pb2.EditFavoritesRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.EditFavoritesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateFavoriteGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/CreateFavoriteGroup',
            TinkoffPy_dot_grpc_dot_instruments__pb2.CreateFavoriteGroupRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.CreateFavoriteGroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteFavoriteGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/DeleteFavoriteGroup',
            TinkoffPy_dot_grpc_dot_instruments__pb2.DeleteFavoriteGroupRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.DeleteFavoriteGroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFavoriteGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetFavoriteGroups',
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetFavoriteGroupsRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetFavoriteGroupsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCountries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetCountries',
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetCountriesRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetCountriesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FindInstrument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/FindInstrument',
            TinkoffPy_dot_grpc_dot_instruments__pb2.FindInstrumentRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.FindInstrumentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBrands(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetBrands',
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetBrandsRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetBrandsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBrandBy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetBrandBy',
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetBrandRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.Brand.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAssetFundamentals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAssetFundamentals',
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetAssetFundamentalsRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetAssetFundamentalsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAssetReports(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAssetReports',
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetAssetReportsRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetAssetReportsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetConsensusForecasts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetConsensusForecasts',
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetConsensusForecastsRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetConsensusForecastsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetForecastBy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetForecastBy',
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetForecastRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.GetForecastResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRiskRates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetRiskRates',
            TinkoffPy_dot_grpc_dot_instruments__pb2.RiskRatesRequest.SerializeToString,
            TinkoffPy_dot_grpc_dot_instruments__pb2.RiskRatesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
